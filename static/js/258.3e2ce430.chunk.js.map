{"version":3,"file":"static/js/258.3e2ce430.chunk.js","mappings":"oMACA,EAA4B,6B,SC6B5B,EAzBkB,SAAC,GAAsB,IAArBA,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAErBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAYH,EAAG,0CACgBA,GACnC,oEAGF,OACQ,UAAC,KAAD,CAAMI,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAML,GAA1C,WACA,gBAAKM,MAAO,CACRC,MAAO,SACRC,IAAKN,EAAWO,IAAI,YACvB,cAAGC,UAAWC,EAAd,SAA+Bb,MAG1C,ECLD,EAdiB,SAAC,GAAc,IAAbc,EAAY,EAAZA,OAEf,OAEQ,eAAIF,UAAWC,EAAAA,EAAAA,UAAf,SACKC,EAAOC,KAAI,SAAAC,GAAK,OACb,eAAIJ,UAAWC,EAAAA,EAAAA,UAAf,UACE,SAAC,EAAD,CAAWd,GAAIiB,EAAMjB,GAAIC,MAAOgB,EAAMhB,MAAOC,IAAKe,EAAMC,eADtBD,EAAMjB,GAD7B,KAOhC,C,uJCdD,GAAgB,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,0B,SCsCnI,EAjCkB,SAAC,GAA4B,IAA3Be,EAA0B,EAA1BA,OAAQI,EAAkB,EAAlBA,aAE1B,OACE,qBAASN,UAAWO,EAAAA,UAApB,WACE,kBAAMP,UAAWO,EAAAA,KAAaC,SAAUF,EAAxC,WACE,mBAAQG,KAAK,SAAST,UAAWO,EAAAA,OAAjC,UACE,iBAAMP,UAAWO,EAAAA,YAAjB,SAAqC,cAGvC,kBACEP,UAAWO,EAAAA,MACXG,KAAK,QACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sBAGhB,SAACC,EAAA,EAAD,CAAUZ,OAAQA,MAGvB,E,SC6BD,EAjDe,WAEX,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAGJC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACNC,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAC3C,GAAKD,EAAL,CAEA,IAAME,EAAQ,mCAAG,gHAEQC,EAAAA,EAAAA,IAAiBH,GAFzB,OAEPI,EAFO,OAKU,KAFbC,EAAUD,EAAOC,SAEfC,QACVC,IAAAA,OAAAA,QAAwB,mBACxBZ,EAAU,KAEVA,EAAUU,GATC,gDAYbE,IAAAA,OAAAA,QAAwB,KAAMC,SAC9Bb,EAAU,IAbG,yDAAH,qDAkBdO,GApBkB,CAqBnB,GAAE,CAACL,IAaF,OACI,SAAC,WAAD,WACI,SAAC,EAAD,CAAWhB,OAAQA,EAAQI,aAbhB,SAACwB,GACpB,IAAMT,EAAQS,EAAEC,OAAOC,SAASX,MAAMY,MACtCH,EAAEI,iBACGb,GAILF,EAAiB,CAACE,MAAAA,IAClBS,EAAEC,OAAOI,SAJLP,IAAAA,OAAAA,QAAwB,yBAK7B,KAOF,C,oBCrDD,KAAgB,UAAY,4BAA4B,KAAO,uBAAuB,UAAY,4BAA4B,UAAY,4B","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.scss?bf85","components/MovieItem/MovieItem.jsx","components/MovieMap/MovieMap.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.scss?866b","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","webpack://goit-react-hw-05-movies/./src/components/Trending/Trending.module.scss?13c3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titleText\":\"MovieItem_titleText__6L-E5\"};","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport scss from \"./MovieItem.module.scss\"\n\nconst MovieItem = ({id, title, img}) => {\n\n    const location = useLocation();\n\n    const posterUrl = img\n    ? `https://image.tmdb.org/t/p/w400/${img}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n    \n\n    return (\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img style={{\n                width: \"300px\"\n            }} src={posterUrl} alt='POSTER'/>\n            <p className={scss.titleText}>{title}</p>\n        </Link>\n    )\n}\n\nMovieItem.propTypes = {\n      id: PropTypes.number.isRequired,\n      img: PropTypes.string,\n      title: PropTypes.string,\n  };\n\nexport default MovieItem","import scss from \"../Trending/Trending.module.scss\";\nimport MovieItem from '../MovieItem/MovieItem';\n\nconst MovieMap = ({movies}) => {\n\n    return (\n\n            <ul className={scss.unordered}>\n                {movies.map(movie => (\n                    <li className={scss.movieList} key={movie.id}>\n                      <MovieItem id={movie.id} title={movie.title} img={movie.poster_path} />\n                    </li>\n                ))}\n            </ul>\n    )\n}\n\nexport default MovieMap;","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__meXwA\",\"form\":\"Searchbar_form__+7KlB\",\"button\":\"Searchbar_button__beu6S\",\"input\":\"Searchbar_input__Arnij\"};","import PropTypes from 'prop-types';\n\nimport MovieMap from '../MovieMap/MovieMap';\n\nimport styles from './Searchbar.module.scss';\n\nconst Searchbar = ({movies, handleSubmit}) => {\n\n  return (\n    <section className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          name='query'\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </form>\n      <MovieMap movies={movies} />\n    </section>\n  );\n};\n\nSearchbar.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n  }).isRequired),\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport {fetchMovieByName} from '../../sevices/api'\n\nconst Movies = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n  \n\nuseEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const getRes = await fetchMovieByName(query);\n            const results = getRes.results;\n\n        if (results.length === 0) {\n          Notiflix.Notify.warning('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n        setMovies([]);\n      }\n    };\n\n\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = (e) => {\n    const query = e.target.elements.query.value;\n    e.preventDefault();\n    if (!query) {\n        Notiflix.Notify.failure('Please enter something');\n        return;\n      };\n    setSearchParams( {query} );\n    e.target.reset();\n  };\n\n    return (\n        <React.Fragment>\n            <Searchbar movies={movies} handleSubmit={handleSubmit} />\n        </React.Fragment>\n    )\n}\n\nexport default Movies;","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Trending_movieList__I54A-\",\"hero\":\"Trending_hero__5xgI3\",\"heroTitle\":\"Trending_heroTitle__oOShk\",\"unordered\":\"Trending_unordered__PIwbZ\"};"],"names":["id","title","img","location","useLocation","posterUrl","to","state","from","style","width","src","alt","className","scss","movies","map","movie","poster_path","handleSubmit","styles","onSubmit","type","name","autoComplete","autoFocus","placeholder","MovieMap","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","query","get","getMovie","fetchMovieByName","getRes","results","length","Notiflix","message","e","target","elements","value","preventDefault","reset"],"sourceRoot":""}