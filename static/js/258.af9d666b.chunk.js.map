{"version":3,"file":"static/js/258.af9d666b.chunk.js","mappings":"2LACA,EAA4B,6B,SC8B5B,EA1BkB,SAAC,GAAsB,IAArBA,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAErBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAYH,EAAG,0CACgBA,GACnC,oEAGF,OACQ,UAAC,KAAD,CAAMI,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAML,GAA1C,WACA,gBAAKM,MAAO,CACRC,MAAO,SACRC,IAAKN,EAAWO,IAAI,YACvB,cAAGC,UAAWC,EAAd,SAA+Bb,MAG1C,C,yKCrBD,GAAgB,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,0B,kBCmFnI,EAtEkB,WACd,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAGJC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACNC,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAC3C,GAAKD,EAAL,CAEA,IAAME,EAAQ,mCAAG,+GAEQC,EAAAA,EAAAA,IAAA,4DAbb,mCAaa,iCACoEH,EADpE,gCAFR,OAEPI,EAFO,OAOU,KAFbC,EAAUD,EAAOE,KAAKD,SAEpBE,QACVC,IAAAA,OAAAA,QAAwB,mBACxBb,EAAU,KAEVA,EAAUU,GAXC,gDAcbG,IAAAA,OAAAA,QAAwB,KAAMC,SAC9Bd,EAAU,IAfG,yDAAH,qDAoBdO,GAtBkB,CAuBnB,GAAE,CAACL,IAaJ,OACE,qBAASN,UAAWmB,EAAAA,UAApB,WACE,kBAAMnB,UAAWmB,EAAAA,KAAaC,SAbb,SAACC,GACpB,IAAMZ,EAAQY,EAAEC,OAAOC,SAASd,MAAMe,MACtCH,EAAEI,iBACGhB,GAILF,EAAiB,CAACE,MAAAA,IAClBY,EAAEC,OAAOI,SAJLT,IAAAA,OAAAA,QAAwB,yBAK7B,EAIG,WACE,mBAAQU,KAAK,SAAS3B,UAAWmB,EAAAA,OAAjC,UACE,iBAAMnB,UAAWmB,EAAAA,YAAjB,SAAqC,cAGvC,kBACEnB,UAAWmB,EAAAA,MACXS,KAAK,QACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sBAGhB,eAAI/B,UAAWC,EAAAA,EAAAA,UAAf,SACWE,EAAO6B,KAAI,SAAAC,GAAK,OACb,eAAIjC,UAAWC,EAAAA,EAAAA,UAAf,UACA,SAACiC,EAAA,EAAD,CAAW/C,GAAI8C,EAAM9C,GAAIC,MAAO6C,EAAM7C,MAAOC,IAAK4C,EAAME,eADpBF,EAAM9C,GAD7B,QAQhC,ECpED,EATe,WACX,OACI,UAAC,WAAD,YACI,SAACiD,EAAA,EAAD,KACA,SAAC,EAAD,MAGX,C,oBCXD,KAAgB,UAAY,4BAA4B,KAAO,uBAAuB,UAAY,4BAA4B,UAAY,4B","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.scss?bf85","components/MovieItem/MovieItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.scss?866b","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","webpack://goit-react-hw-05-movies/./src/components/Trending/Trending.module.scss?13c3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titleText\":\"MovieItem_titleText__6L-E5\"};","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport scss from \"./MovieItem.module.scss\"\n\nconst MovieItem = ({id, title, img}) => {\n\n    const location = useLocation();\n\n    const posterUrl = img\n    ? `https://image.tmdb.org/t/p/w400/${img}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n    \n\n    return (\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img style={{\n                width: \"300px\"\n            }} src={posterUrl} alt='POSTER'/>\n            <p className={scss.titleText}>{title}</p>\n        </Link>\n    )\n}\n\nMovieItem.propTypes = {\n      // title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      img: PropTypes.string,\n      title: PropTypes.string,\n  };\n\nexport default MovieItem","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__meXwA\",\"form\":\"Searchbar_form__+7KlB\",\"button\":\"Searchbar_button__beu6S\",\"input\":\"Searchbar_input__Arnij\"};","// Searchbar.js\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\n\nimport MovieItem from '../MovieItem/MovieItem'\n\nimport styles from './Searchbar.module.scss';\nimport scss from '../Trending/Trending.module.scss'\n\nconst API_KEY = \"d6e689e53b61040192ebd16d8765557a\"\n\nconst Searchbar = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n  \n\nuseEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const getRes = await axios.get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n            );\n            const results = getRes.data.results\n\n        if (results.length === 0) {\n          Notiflix.Notify.warning('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n        setMovies([]);\n      }\n    };\n\n\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = (e) => {\n    const query = e.target.elements.query.value;\n    e.preventDefault();\n    if (!query) {\n        Notiflix.Notify.failure('Please enter something');\n        return;\n      };\n    setSearchParams( {query} );\n    e.target.reset();\n  };\n\n  return (\n    <section className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          name='query'\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </form>\n      <ul className={scss.unordered}>\n                {movies.map(movie => (\n                    <li className={scss.movieList} key={movie.id}>\n                    <MovieItem id={movie.id} title={movie.title} img={movie.poster_path} />\n                    </li>\n                ))}\n            </ul>\n    </section>\n  );\n};\n\nexport default Searchbar;","import React from 'react';\n\nimport Header from \"../../components/Header/Header\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\n\nconst Movies = () => {\n    return (\n        <React.Fragment>\n            <Header />\n            <Searchbar />\n        </React.Fragment>\n    )\n}\n\nexport default Movies;","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Trending_movieList__I54A-\",\"hero\":\"Trending_hero__5xgI3\",\"heroTitle\":\"Trending_heroTitle__oOShk\",\"unordered\":\"Trending_unordered__PIwbZ\"};"],"names":["id","title","img","location","useLocation","posterUrl","to","state","from","style","width","src","alt","className","scss","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","query","get","getMovie","axios","getRes","results","data","length","Notiflix","message","styles","onSubmit","e","target","elements","value","preventDefault","reset","type","name","autoComplete","autoFocus","placeholder","map","movie","MovieItem","poster_path","Header"],"sourceRoot":""}